trigger:
  branches:
    include:
      - master  # Kör pipelinen på pushar till master

pool:
  vmImage: 'windows-latest'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '**/*.sln'

# Lägg till ett steg för att läsa och inkrementera versionsnumret
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      $versionFile = 'version.txt'
      if (Test-Path $versionFile) {
          $version = Get-Content $versionFile
          
          # Dela upp versionsnumret
          $parts = $version -split '\.'
          $major = [int]$parts[0]
          $minor = [int]$parts[1]
          $build = [int]$parts[2]
          $revision = [int]$parts[3]
          
          # Inkrementera byggnummer och sätt revision till 0
          $revision++
          $newVersion = "$major.$minor.$build.$revision"
          
          # Skriv tillbaka den nya versionen till version.txt
          Set-Content $versionFile $newVersion
          
          Write-Host "New version: $newVersion"
          echo "##vso[task.setvariable variable=versionNumber]$newVersion"
      } else {
          Write-Error "version.txt not found!"
      }
  displayName: 'Inkrementera versionsnummer'

- task: VSBuild@1
  inputs:
    solution: '**/*.sln'
    msbuildArchitecture: 'x64'
    configuration: 'Release'

- task: CopyFiles@2
  inputs:
    contents: '**/bin/Release/**'
    targetFolder: '$(Build.ArtifactStagingDirectory)'

# Uppdatera arkivnamnet med versionsnumret
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.ArtifactStagingDirectory)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/TMBuilder_$(versionNumber).zip'
    replaceExistingArchive: true

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/TMBuilder_$(versionNumber).zip'
    ArtifactName: 'drop'
    
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      git fetch origin  # Hämta alla grenar
      git checkout $env:Build_SourceBranchName
      git config --local user.email "action@azuredevops.com"
      git config --local user.name "Azure DevOps"
      git add version.txt
      git commit -m "Increment version to $(versionNumber)"
      git push $env:Build_SourceBranchName
  displayName: 'Commit updated version file'
  env:
    System.AccessToken: $(System.AccessToken)